// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

#define PWM_CLUSTER_CYCLES 5

// ----------- //
// pwm_cluster //
// ----------- //

#define pwm_cluster_wrap_target 0
#define pwm_cluster_wrap 4

static const uint16_t pwm_cluster_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0x6000, //  1: out    pins, 32                   
    0x80a0, //  2: pull   block                      
    0x6040, //  3: out    y, 32                      
    0x0085, //  4: jmp    y--, 5                     
            //     .wrap
    0x0304, //  5: jmp    4                      [3] 
};

#if !PICO_NO_HARDWARE
static const struct pio_program pwm_cluster_program = {
    .instructions = pwm_cluster_program_instructions,
    .length = 6,
    .origin = -1,
};

static inline pio_sm_config pwm_cluster_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + pwm_cluster_wrap_target, offset + pwm_cluster_wrap);
    return c;
}
#endif

// ----------------- //
// debug_pwm_cluster //
// ----------------- //

#define debug_pwm_cluster_wrap_target 0
#define debug_pwm_cluster_wrap 4

static const uint16_t debug_pwm_cluster_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block           side 0     
    0x7000, //  1: out    pins, 32        side 1     
    0x80a0, //  2: pull   block           side 0     
    0x6040, //  3: out    y, 32           side 0     
    0x0085, //  4: jmp    y--, 5          side 0     
            //     .wrap
    0x1304, //  5: jmp    4               side 1 [3] 
};

#if !PICO_NO_HARDWARE
static const struct pio_program debug_pwm_cluster_program = {
    .instructions = debug_pwm_cluster_program_instructions,
    .length = 6,
    .origin = -1,
};

static inline pio_sm_config debug_pwm_cluster_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + debug_pwm_cluster_wrap_target, offset + debug_pwm_cluster_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}
#endif
